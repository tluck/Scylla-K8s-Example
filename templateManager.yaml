# apiVersion: v1
# kind: Namespace
# metadata:
#   name: NAMESPACE

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scylla-manager-config
  namespace: NAMESPACE
data:
  scylla-manager.yaml: |-
    http: :5080
    logger:
      level: info
    database:
      hosts:
      - scylla-manager-DATACENTER-rack1-0
      # ssl: true
    ssl:
      cert_file: /var/run/configmaps/scylla-manager/client-certs/ca.crt
      user_cert_file: /var/run/secrets/scylla-manager/client-certs/tls.crt
      user_key_file: /var/run/secrets/scylla-manager/client-certs/tls.key
      # cert_file: /var/run/configmaps/scylla-manager/client-ca/ca-bundle.crt
      # user_cert_file: /var/run/secrets/scylla-manager/user-admin/tls.crt
      # user_key_file: /var/run/secrets/scylla-manager/user-admin/tls.key
  
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: NAMESPACE
  name: scylla-manager-to-scylla-pod
spec:
  policyTypes:
  - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/managed-by: scylla-operator
      app.kubernetes.io/name: scylla
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: scylla-manager

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: scylla-manager
    app.kubernetes.io/instance: scylla-manager
  name: scylla-manager
  namespace: NAMESPACE
spec:
  ports:
  - name: api
    port: 80
    protocol: TCP
    targetPort: 5080
  - name: metrics
    port: 5090
    protocol: TCP
    targetPort: 5090
  selector:
    app.kubernetes.io/name: scylla-manager
    app.kubernetes.io/instance: scylla-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scylla-manager
  namespace: NAMESPACE
  labels:
    app.kubernetes.io/name: scylla-manager
    app.kubernetes.io/instance: scylla-manager

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scylla-manager
  namespace: NAMESPACE
  labels:
    app.kubernetes.io/name: scylla-manager
    app.kubernetes.io/instance: scylla-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scylla-manager
      app.kubernetes.io/instance: scylla-manager
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scylla-manager
        app.kubernetes.io/instance: scylla-manager
    spec:
      serviceAccountName: scylla-manager
      containers:
      - name: scylla-manager
        image: docker.io/scylladb/scylla-manager:MANAGERVERSION
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/scylla-manager
        args:
        - --config-file=/mnt/etc/scylla-manager/scylla-manager.yaml
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /mnt/etc/scylla-manager
          name: scylla-manager-config
        readinessProbe:
          httpGet:
            path: /api/v1/clusters
            port: 5080
          periodSeconds: 10
          timeoutSeconds: 3
      volumes:
      - configMap:
          name: scylla-manager-config
        name: scylla-manager-config
    
---
apiVersion: scylla.scylladb.com/v1
kind: ScyllaCluster
metadata:
  name: scylla-manager
  namespace: NAMESPACE
spec:
  version: DBVERSION
  agentVersion: AGENTVERSION
  repository: docker.io/scylladb/scylla
  agentRepository: docker.io/scylladb/scylla-manager-agent
  developerMode: DEVMODE
  cpuset: true
  sysctls:
    - fs.aio-max-nr=30000000
  datacenter:
    name: DATACENTER
    racks:
    - members: MANAGERMEMBERS
      name: rack1
      placement:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: scylla.scylladb.com/node-type
                operator: In
                values:
                - NODESELECTOR
        tolerations:
        - effect: NoSchedule
          key: scylla-operator.scylladb.com/dedicated
          operator: Equal
          value: scyllaclusters
      resources:
        requests:
          cpu: MANAGERDBCPULIMIT
          memory: MANAGERDBMEMORYLIMIT
        limits:
          cpu: MANAGERDBCPULIMIT
          memory: MANAGERDBMEMORYLIMIT
      agentResources:      # For ScyllaDB Agent container
        requests:
          cpu: "100m"
          memory: "100Mi"
        limits:
          cpu: "100m"
          memory: "100Mi"
      storage:
        capacity: MANAGERDBCAPACITY
        storageClassName: STORAGECLASS
